<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>EdwardDrew</title>
  
  <subtitle>贵有恒，无需三更眠五更起；最无益，莫过一日曝十日寒</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xianhuali.gitee.io/"/>
  <updated>2019-01-06T03:58:07.392Z</updated>
  <id>https://xianhuali.gitee.io/</id>
  
  <author>
    <name>EdwardDrew</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JSE-1.1.1 JAVA程序运行原理分析</title>
    <link href="https://xianhuali.gitee.io/2019/01/06/JSE-1-1-1-JAVA%E7%A8%8B%E5%BA%8F%E8%BF%90%E8%A1%8C%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90/"/>
    <id>https://xianhuali.gitee.io/2019/01/06/JSE-1-1-1-JAVA程序运行原理分析/</id>
    <published>2019-01-06T03:47:43.000Z</published>
    <updated>2019-01-06T03:58:07.392Z</updated>
    
    <content type="html"><![CDATA[<h1 id="【主题】"><a href="#【主题】" class="headerlink" title="【主题】"></a>【主题】</h1><p>JAVA程序运行原理分析</p><h1 id="【信息】"><a href="#【信息】" class="headerlink" title="【信息】"></a>【信息】</h1><h2 id="class文件内容"><a href="#class文件内容" class="headerlink" title="class文件内容"></a>class文件内容</h2><p>字节码，开头包含一个0xcafebabe(16进制)特殊的一个标志</p><blockquote><p>魔数cafebabe来源可参考<a href="https://en.wikipedia.org/wiki/Java_class_file" target="_blank" rel="noopener">WIKI百科: Java_class_file</a></p></blockquote><p>class文件可用二进制软件查看，比如ultraedit，我用notepad++的ansi转hex看不出来开头的魔数，应该是原来class文件是windows1252编码问题。</p><h2 id="JVM运行时数据区"><a href="#JVM运行时数据区" class="headerlink" title="JVM运行时数据区"></a>JVM运行时数据区</h2><p><strong>线程共享</strong>（所有线程能访问这块内存数据，随虚拟机或者GC而创建和销毁）部分：</p><ul><li>方法区：存放class的一些信息，类信息、常量、静态变量、编译后的代码等数据</li><li>堆内存：对象实例的存放，垃圾回收主要管理。细分为：老年代、新生代（Eden、From Survivor、To Survivor）。如果满了oom。<blockquote><p>最近看到一篇文章-<a href="https://www.cnblogs.com/bhlsheji/p/5330045.html" target="_blank" rel="noopener">Linux与JVM的内存关系分析</a>，分析内存泄漏问题，应该能更好地理解堆内存吧。</p></blockquote></li></ul><p><strong>线程独占</strong>（每个线程都会有它独立的空间，随线程生命周期而创建和销毁）部分：</p><ul><li>虚拟机栈</li><li>本地方法栈</li><li>程序计数器</li></ul><p>不用深入了解底层，有兴趣自行去了解。<br>底层：执行引擎-&gt;本地库接口-&gt;本地方法库</p><h2 id="虚拟机栈"><a href="#虚拟机栈" class="headerlink" title="虚拟机栈"></a>虚拟机栈</h2><p>概念：每个线程都在这个空间有一个私有的空间</p><ul><li>线程栈由多个栈帧（Stack Frame）组成</li><li>一个线程会执行一个以上方法，一个方法对应一个栈帧</li><li>栈帧包含：局部变量表、操作数栈、动态链接、方法返回地址、附加信息等。</li><li>栈内存默认最大是1M，超出则抛出StackOverflowError</li></ul><h2 id="本地方法栈"><a href="#本地方法栈" class="headerlink" title="本地方法栈"></a>本地方法栈</h2><p>和虚拟机栈类似，只是执行的方法不同。虚拟机栈是为虚拟机执行JAVA方法而准备的，本地方法栈是为虚拟机使用Native本地方法而准备的。</p><p>虚拟机规范没有规定具体的实现</p><h2 id="程序计数器-Program-Counter-Register"><a href="#程序计数器-Program-Counter-Register" class="headerlink" title="程序计数器(Program Counter Register)"></a>程序计数器(Program Counter Register)</h2><p>记录<strong>当前线程执行字节码的位置</strong>，存储的是字节码指令地址，如果执行Native方法，则计数器为空。</p><h2 id="查看class文件内容"><a href="#查看class文件内容" class="headerlink" title="查看class文件内容"></a>查看class文件内容</h2><p>javap -v Demo1.class&gt;Demo1.txt</p><blockquote><p>输出所有的class信息到Demo1.txt</p></blockquote><h3 id="class内容-版本号-访问控制"><a href="#class内容-版本号-访问控制" class="headerlink" title="class内容-版本号/访问控制"></a>class内容-版本号/访问控制</h3><p><code>major version: 52</code>，版本号规则：JDK5，6，7，8分别对应49，50，51，52</p><p>访问标志表要记住</p><h3 id="class内容-常量池"><a href="#class内容-常量池" class="headerlink" title="class内容-常量池"></a>class内容-常量池</h3><p>跟字符串常量池不一样，这个是编译之后类里面包含的一些静态常量，比如方法名称</p><h3 id="class内容-构造方法"><a href="#class内容-构造方法" class="headerlink" title="class内容-构造方法"></a>class内容-构造方法</h3><p>没有定义构造函数时，会有隐式的无参构造函数</p><h3 id="class内容-程序入口main方法"><a href="#class内容-程序入口main方法" class="headerlink" title="class内容-程序入口main方法"></a>class内容-程序入口main方法</h3><p><code>stack=3, locals=4, args_size=1</code>本地变量数量，参数数量，方法对应栈帧中操作数栈的深度。</p><p>javap翻译出来的是操作符，class文件内存储的是指令码。</p><h3 id="程序完整运行分析（一）"><a href="#程序完整运行分析（一）" class="headerlink" title="程序完整运行分析（一）"></a>程序完整运行分析（一）</h3><p>加载信息到方法区，运行时常量池：字符串常量</p><p>HotSpot虚拟机：</p><ul><li>1.7和之前称为永久代</li><li>1.8开始称为元数据空间</li></ul><h3 id="程序完整运行分析（二）"><a href="#程序完整运行分析（二）" class="headerlink" title="程序完整运行分析（二）"></a>程序完整运行分析（二）</h3><p>JVM创建线程来执行代码，在虚拟机栈、程序计数器内存区域中创建线程独占的空间。</p><ul><li>虚拟机栈：Thread（栈帧）</li><li>程序计数器：Thread执行位置-字节码指令地址</li></ul><h3 id="程序完整运行分析（三）"><a href="#程序完整运行分析（三）" class="headerlink" title="程序完整运行分析（三）"></a>程序完整运行分析（三）</h3><p>虚拟机栈：<br>main方法栈帧：</p><ul><li>本地变量表：赋值给变量</li><li>操作数栈：入栈和出栈</li></ul><p>程序计数器：当前线程执行位置</p><p>所谓的指令码执行，它就是对栈帧里面的本地变量表、操作数栈以及栈帧的一些信息进行不断的操作，以及多个栈帧交替执行，达到了程序运行的最终效果</p><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>JVM运行原理中更底层实现，针对不同的操作系统或者处理器，会有不同的实现-这也是Java能够实现“一处编写，处处运行”的原理</p><h1 id="【思考】"><a href="#【思考】" class="headerlink" title="【思考】"></a>【思考】</h1><p>详细讲解了JVM运行java代码的原理，知其然还要知其所以然。</p><ul><li>但是了解这些有什么用呢？</li></ul><h1 id="【行动-反馈】"><a href="#【行动-反馈】" class="headerlink" title="【行动/反馈】"></a>【行动/反馈】</h1><p>去百度查下思考的问题？</p><ul><li>性能优化：懂原理, 才能真正的对代码进行优化, 提升程序的性能和效率</li></ul><h1 id="【钩子】"><a href="#【钩子】" class="headerlink" title="【钩子】"></a>【钩子】</h1><p>java运行原理 jvm运行分析 class文件分析</p><h1 id="【出处】"><a href="#【出处】" class="headerlink" title="【出处】"></a>【出处】</h1><p>Java高级开发工程师-JAVA程序运行原理分析</p><h1 id="【时间】"><a href="#【时间】" class="headerlink" title="【时间】"></a>【时间】</h1><p>2018-12-22</p><hr><p>若涉及版权问题,请及时联系作者删除。</p><blockquote><p>更多精彩文章请关注</p><ul><li><a href="https://xianhuali.gitee.io/">个人博客：EdwardDrew</a></li><li><a href="https://www.jianshu.com/u/a233ef56efa2" target="_blank" rel="noopener">简书</a></li><li><a href="https://me.csdn.net/EdwardDrew" target="_blank" rel="noopener">CSDN</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;【主题】&quot;&gt;&lt;a href=&quot;#【主题】&quot; class=&quot;headerlink&quot; title=&quot;【主题】&quot;&gt;&lt;/a&gt;【主题】&lt;/h1&gt;&lt;p&gt;JAVA程序运行原理分析&lt;/p&gt;
&lt;h1 id=&quot;【信息】&quot;&gt;&lt;a href=&quot;#【信息】&quot; class=&quot;headerli
      
    
    </summary>
    
      <category term="Java高级开发工程师微专业" scheme="https://xianhuali.gitee.io/categories/Java%E9%AB%98%E7%BA%A7%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%BE%AE%E4%B8%93%E4%B8%9A/"/>
    
    
      <category term="高性能编程专题" scheme="https://xianhuali.gitee.io/tags/%E9%AB%98%E6%80%A7%E8%83%BD%E7%BC%96%E7%A8%8B%E4%B8%93%E9%A2%98/"/>
    
      <category term="多线程并发编程" scheme="https://xianhuali.gitee.io/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
      <category term="Java基础" scheme="https://xianhuali.gitee.io/tags/Java%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>JSE-开学典礼</title>
    <link href="https://xianhuali.gitee.io/2019/01/06/JSE-%E5%BC%80%E5%AD%A6%E5%85%B8%E7%A4%BC/"/>
    <id>https://xianhuali.gitee.io/2019/01/06/JSE-开学典礼/</id>
    <published>2019-01-06T03:46:31.000Z</published>
    <updated>2019-01-06T03:46:58.153Z</updated>
    
    <content type="html"><![CDATA[<h1 id="【主题】"><a href="#【主题】" class="headerlink" title="【主题】"></a>【主题】</h1><p>开学典礼：班级规范、学习方法</p><h1 id="【信息】"><a href="#【信息】" class="headerlink" title="【信息】"></a>【信息】</h1><h2 id="01-我们拥有什么？"><a href="#01-我们拥有什么？" class="headerlink" title="01 我们拥有什么？"></a>01 我们拥有什么？</h2><ul><li>预习资料</li><li>学习计划</li><li>学员手册</li></ul><p>公开课：营销，只是为了让大家进入学习状态。以正式课为主</p><p>四大明星讲师：Tony-Allen-Mike-Alex</p><ul><li>英文名为了看英文原版书籍</li></ul><p>一切问题都可以找班主任-余老师</p><h2 id="02-高效学习方法分享"><a href="#02-高效学习方法分享" class="headerlink" title="02 高效学习方法分享"></a>02 高效学习方法分享</h2><ul><li>间歇性关注：高度集中注意力</li><li>定期输出</li></ul><h3 id="间歇性关注"><a href="#间歇性关注" class="headerlink" title="间歇性关注"></a>间歇性关注</h3><p>why?：希望同学们能在学习过程中达成“心流体验”-&gt;提升学习幸福感-&gt;高效吸收内容</p><p>how？</p><ul><li>善于利用物品和动作营造仪式感：笔记本、坐姿……</li><li>对“专注”中间的“间歇”保持积极的心态</li><li>设立具象化的目标，通过数字进行量化</li><li>学习过程中对自己要有奖惩机制</li></ul><h3 id="定期输出"><a href="#定期输出" class="headerlink" title="定期输出"></a>定期输出</h3><p>why：<br>匮乏感（input）-&gt;满足感-&gt;（output：代码，博客，讨论区主题帖……）快感<br>-&gt;足够的反馈-&gt;匮乏感</p><p>how：</p><ul><li>作业提交：课内作业、课外作业</li><li>博客分享</li></ul><h2 id="03班级管理规范"><a href="#03班级管理规范" class="headerlink" title="03班级管理规范"></a>03班级管理规范</h2><p>1、定期查看群公告内容</p><p>提问规范：</p><ul><li>wen端讨论区答疑：帖子</li><li>qq群内提问格式：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">- QQ群技术类问题可@授课老师</span><br><span class="line">- 一般24h内回复，紧急找班主任</span><br><span class="line"></span><br><span class="line">**作业：讨论区【我学java这些年】**</span><br><span class="line"></span><br><span class="line">## 如何平衡工作/学习/生活？</span><br><span class="line">学习和工作的提升带来生活上的提升</span><br><span class="line"></span><br><span class="line">时间有限，价值无限</span><br><span class="line"></span><br><span class="line">如何平衡？</span><br><span class="line">### 时间管理</span><br><span class="line">- 在有限的时间上做管理</span><br><span class="line">&gt;新时间四象限</span><br><span class="line"></span><br><span class="line">### 能力升级</span><br><span class="line">- 在有限的事情上做提升</span><br><span class="line">&gt; 职业能力晋升图</span><br><span class="line"></span><br><span class="line">关于x-6的问题：</span><br></pre></td></tr></table></figure></li></ul><p>1+1+1+1+1+1=X<br>X&gt;6<br>X-6=?<br><code>`</code><br>每个人的X都不一样：知识点整合？成长？</p><p>对于自己而言，X-6代表突破</p><h1 id="【思考】"><a href="#【思考】" class="headerlink" title="【思考】"></a>【思考】</h1><ul><li>弟子不必不如师</li><li>一段时间高度集中注意力学习：番茄工作法</li><li>定期输出：代码、博客</li><li>如何平衡时间？每个人都不一样，找到自己的时间管理</li></ul><h1 id="【行动-反馈】"><a href="#【行动-反馈】" class="headerlink" title="【行动/反馈】"></a>【行动/反馈】</h1><ul><li>时间管理</li><li>设立目标</li></ul><h1 id="【钩子】"><a href="#【钩子】" class="headerlink" title="【钩子】"></a>【钩子】</h1><p>开学典礼 学习方法</p><h1 id="【出处】"><a href="#【出处】" class="headerlink" title="【出处】"></a>【出处】</h1><p>Java高级开发工程师-开学典礼</p><h1 id="【时间】"><a href="#【时间】" class="headerlink" title="【时间】"></a>【时间】</h1><p>2018-12-22</p><hr><p>若涉及版权问题,请及时联系作者删除。</p><blockquote><p>更多精彩文章请关注</p><ul><li><a href="https://xianhuali.gitee.io/">个人博客：EdwardDrew</a></li><li><a href="https://www.jianshu.com/u/a233ef56efa2" target="_blank" rel="noopener">简书</a></li><li><a href="https://me.csdn.net/EdwardDrew" target="_blank" rel="noopener">CSDN</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;【主题】&quot;&gt;&lt;a href=&quot;#【主题】&quot; class=&quot;headerlink&quot; title=&quot;【主题】&quot;&gt;&lt;/a&gt;【主题】&lt;/h1&gt;&lt;p&gt;开学典礼：班级规范、学习方法&lt;/p&gt;
&lt;h1 id=&quot;【信息】&quot;&gt;&lt;a href=&quot;#【信息】&quot; class=&quot;header
      
    
    </summary>
    
      <category term="Java高级开发工程师微专业" scheme="https://xianhuali.gitee.io/categories/Java%E9%AB%98%E7%BA%A7%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%BE%AE%E4%B8%93%E4%B8%9A/"/>
    
    
      <category term="开学准备" scheme="https://xianhuali.gitee.io/tags/%E5%BC%80%E5%AD%A6%E5%87%86%E5%A4%87/"/>
    
  </entry>
  
  <entry>
    <title>JSE-班级预备课2</title>
    <link href="https://xianhuali.gitee.io/2019/01/06/JSE-%E7%8F%AD%E7%BA%A7%E9%A2%84%E5%A4%87%E8%AF%BE2/"/>
    <id>https://xianhuali.gitee.io/2019/01/06/JSE-班级预备课2/</id>
    <published>2019-01-06T03:45:36.000Z</published>
    <updated>2019-01-06T03:46:08.653Z</updated>
    
    <content type="html"><![CDATA[<h1 id="【主题】"><a href="#【主题】" class="headerlink" title="【主题】"></a>【主题】</h1><p>技术大神是怎么练成的？</p><h1 id="【信息】"><a href="#【信息】" class="headerlink" title="【信息】"></a>【信息】</h1><p>环境影响、机会</p><h2 id="01明星产品预分析"><a href="#01明星产品预分析" class="headerlink" title="01明星产品预分析"></a>01明星产品预分析</h2><ul><li>云课堂微服务机构</li><li>云课堂线上故障案例</li></ul><p>眼界，项目大，稳定</p><h2 id="02技术方案落地实际业务"><a href="#02技术方案落地实际业务" class="headerlink" title="02技术方案落地实际业务"></a>02技术方案落地实际业务</h2><ol><li>提出技术方案</li><li>开发规范化</li><li>引入项目管理</li></ol><p><strong>技术并不是最复杂的，人和事及关系才是麻烦</strong></p><p><strong>当前公司的所有技术我有没有全学会了？（跳槽前）有哪些产品？哪些技术？哪些部门（偷师）</strong></p><h2 id="03-Gitlab的高效使用"><a href="#03-Gitlab的高效使用" class="headerlink" title="03 Gitlab的高效使用"></a>03 Gitlab的高效使用</h2><p>查资料</p><ul><li>开源社区：github、gitlab、gitee</li><li>项目的issue</li></ul><h2 id="04技术博客的写作方法"><a href="#04技术博客的写作方法" class="headerlink" title="04技术博客的写作方法"></a>04技术博客的写作方法</h2><p>写博客是对自己的投资</p><p>写博客有套路：</p><ul><li><strong>博客书写-技术理论型</strong>：掌握3W1H分析法（what、where、why、how）</li><li><strong>实操类技巧</strong>：三部曲-步骤+演示+总结</li></ul><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ul><li>频率：一周2-3篇，正好一次总结</li><li>内容：以学习内容为主</li><li>平台：开放平台为主，再转发到自己的个人博客/公众号</li></ul><p>问题：</p><ul><li>oracle普通使用不收费</li><li>Linux命令：菜鸟教程</li><li>学习前需要了解SSM框架</li></ul><h1 id="【思考】"><a href="#【思考】" class="headerlink" title="【思考】"></a>【思考】</h1><ul><li>环境影响个人，机会造就人才</li><li>眼界随着你的接触而变广</li><li>写博客是对自己的投资</li><li>跳槽前尽量了解当前公司的技术和现状</li></ul><h1 id="【行动-反馈】"><a href="#【行动-反馈】" class="headerlink" title="【行动/反馈】"></a>【行动/反馈】</h1><ul><li>坚持每周写博客</li><li>做好当前公司的工作，主动去了解</li></ul><h1 id="【钩子】"><a href="#【钩子】" class="headerlink" title="【钩子】"></a>【钩子】</h1><p>技术大神    技术架构    写博客</p><h1 id="【出处】"><a href="#【出处】" class="headerlink" title="【出处】"></a>【出处】</h1><p>Java高级开发工程师-班级预备课2</p><h1 id="【时间】"><a href="#【时间】" class="headerlink" title="【时间】"></a>【时间】</h1><p>2018-12-15、16</p><hr><p>若涉及版权问题,请及时联系作者删除。</p><blockquote><p>更多精彩文章请关注</p><ul><li><a href="https://xianhuali.gitee.io/">个人博客：EdwardDrew</a></li><li><a href="https://www.jianshu.com/u/a233ef56efa2" target="_blank" rel="noopener">简书</a></li><li><a href="https://me.csdn.net/EdwardDrew" target="_blank" rel="noopener">CSDN</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;【主题】&quot;&gt;&lt;a href=&quot;#【主题】&quot; class=&quot;headerlink&quot; title=&quot;【主题】&quot;&gt;&lt;/a&gt;【主题】&lt;/h1&gt;&lt;p&gt;技术大神是怎么练成的？&lt;/p&gt;
&lt;h1 id=&quot;【信息】&quot;&gt;&lt;a href=&quot;#【信息】&quot; class=&quot;headerlin
      
    
    </summary>
    
      <category term="Java高级开发工程师微专业" scheme="https://xianhuali.gitee.io/categories/Java%E9%AB%98%E7%BA%A7%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%BE%AE%E4%B8%93%E4%B8%9A/"/>
    
    
      <category term="开学准备" scheme="https://xianhuali.gitee.io/tags/%E5%BC%80%E5%AD%A6%E5%87%86%E5%A4%87/"/>
    
  </entry>
  
  <entry>
    <title>JSE-班级预备课1</title>
    <link href="https://xianhuali.gitee.io/2019/01/06/JSE-%E7%8F%AD%E7%BA%A7%E9%A2%84%E5%A4%87%E8%AF%BE1/"/>
    <id>https://xianhuali.gitee.io/2019/01/06/JSE-班级预备课1/</id>
    <published>2019-01-06T03:36:37.000Z</published>
    <updated>2019-01-06T03:42:34.183Z</updated>
    
    <content type="html"><![CDATA[<h1 id="【主题】"><a href="#【主题】" class="headerlink" title="【主题】"></a>【主题】</h1><p>课程体系梳理与学习的注意点</p><h1 id="【信息】"><a href="#【信息】" class="headerlink" title="【信息】"></a>【信息】</h1><p><strong>课程大纲</strong>：要熟悉</p><ul><li>要做<strong>T字型人才</strong>，竖要比横长（竖：领域的深度，横：领域的宽度）</li></ul><h2 id="1、干货中的干货："><a href="#1、干货中的干货：" class="headerlink" title="1、干货中的干货："></a>1、<strong>干货中的干货</strong>：</h2><p>提高逻辑思维，养成线性思维（两个或多个概念，像一条线串起来）</p><ul><li><strong>演绎推导法</strong>：因果推理</li><li><strong>归纳总结法</strong>：收集相关信息，所可能出现问题的信息，总结发现对吧，找出相同点和不同点</li><li><strong>类比法</strong>：能用例子类比时，说明你已经掌握了这个技术</li></ul><h2 id="2、高效互动"><a href="#2、高效互动" class="headerlink" title="2、高效互动"></a>2、高效互动</h2><p><strong>《提问的智慧》（<a href="https://github.com/EdwardDrew/How-To-Ask-Questions-The-Smart-Way" target="_blank" rel="noopener">How-To-Ask-Questions</a>）</strong></p><ul><li>优先在群里提问</li></ul><h2 id="3、学习时间安排"><a href="#3、学习时间安排" class="headerlink" title="3、学习时间安排"></a>3、学习时间安排</h2><p><strong>定期加班型</strong>：每周做一次学习总结，形成自己的学习周期</p><p><strong>基础不好型</strong>：每个示例都坚持亲自敲一遍，勤能补拙</p><h2 id="4、作业考核"><a href="#4、作业考核" class="headerlink" title="4、作业考核"></a>4、作业考核</h2><p>考核方式：</p><ul><li>试卷型</li><li>开放性问题</li><li>实操型</li></ul><p><strong>《你要配得上自己所受的苦》-卢苏伟</strong></p><ul><li>做事情，没有搏命的精神，全力以赴地投入，是不可能成功的。人性是充满惰性的……</li><li>多打鸡血，偶尔打鸡血。人生不能没有鸡血</li></ul><p><strong>个人博客</strong>：人生苦短，文字流传。</p><ul><li>表达、总结能力的提升，这行业往上走必备，靠文字吃饭</li></ul><h1 id="【思考】"><a href="#【思考】" class="headerlink" title="【思考】"></a>【思考】</h1><ul><li>课程体系很重要，要在自己脑海中形成自己的课程体系。</li><li>学习方法不同，提高逻辑思维是一样的</li><li>输出是最好的学习方法</li></ul><h1 id="【行动-反馈】"><a href="#【行动-反馈】" class="headerlink" title="【行动/反馈】"></a>【行动/反馈】</h1><ul><li>课程大纲多看，联系自己的知识点梳理自己的知识体系</li><li>注意逻辑思维的锻炼，3个方法</li><li><del>看完《提问的智慧》</del></li><li>每周做一次总结</li><li>看下《你要配得上自己所受的苦》</li><li><del>写个人博客</del></li></ul><h1 id="【钩子】"><a href="#【钩子】" class="headerlink" title="【钩子】"></a>【钩子】</h1><p>学习方法 逻辑思维 java高级开发工程师课程体系</p><h1 id="【出处】"><a href="#【出处】" class="headerlink" title="【出处】"></a>【出处】</h1><p>Java高级开发工程师-班级预备课</p><h1 id="【时间】"><a href="#【时间】" class="headerlink" title="【时间】"></a>【时间】</h1><p>2018-12-01</p><hr><p>若涉及版权问题,请及时联系作者删除。</p><blockquote><p>更多精彩文章请关注</p><ul><li><a href="https://xianhuali.gitee.io/">个人博客：EdwardDrew</a></li><li><a href="https://www.jianshu.com/u/a233ef56efa2" target="_blank" rel="noopener">简书</a></li><li><a href="https://me.csdn.net/EdwardDrew" target="_blank" rel="noopener">CSDN</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;【主题】&quot;&gt;&lt;a href=&quot;#【主题】&quot; class=&quot;headerlink&quot; title=&quot;【主题】&quot;&gt;&lt;/a&gt;【主题】&lt;/h1&gt;&lt;p&gt;课程体系梳理与学习的注意点&lt;/p&gt;
&lt;h1 id=&quot;【信息】&quot;&gt;&lt;a href=&quot;#【信息】&quot; class=&quot;headerl
      
    
    </summary>
    
      <category term="Java高级开发工程师微专业" scheme="https://xianhuali.gitee.io/categories/Java%E9%AB%98%E7%BA%A7%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%BE%AE%E4%B8%93%E4%B8%9A/"/>
    
    
      <category term="开学准备" scheme="https://xianhuali.gitee.io/tags/%E5%BC%80%E5%AD%A6%E5%87%86%E5%A4%87/"/>
    
  </entry>
  
  <entry>
    <title>记一次发版过程中sb错误的思考与总结</title>
    <link href="https://xianhuali.gitee.io/2019/01/06/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%8F%91%E7%89%88%E8%BF%87%E7%A8%8B%E4%B8%ADsb%E9%94%99%E8%AF%AF%E7%9A%84%E6%80%9D%E8%80%83%E4%B8%8E%E6%80%BB%E7%BB%93/"/>
    <id>https://xianhuali.gitee.io/2019/01/06/记一次发版过程中sb错误的思考与总结/</id>
    <published>2019-01-06T03:28:15.000Z</published>
    <updated>2019-01-06T03:29:03.784Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>昨天晚上9点多的时候发版小程序（前端RazSchool目录）和商城（rmall目录），<strong>前端资源</strong>和后端代码都发了，测了下，发现支付不了，前端调起不了微信支付。解决这个问题用了2个小时左右，最终发现是因为前端资源没发的sb问题（恨不得给自己两个大耳刮子）……</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>出了问题，当然是查找原因啦。首先支付时安卓微信端直接没有提示，iOS微信提示<code>调用支付JSAPI缺少参数:appId</code>，嗯，这时候怀疑是前端的问题了，是不是前端代码有问题？让前端同事检查了一遍，没问题？难道是我后端问题？好吧！</p><ul><li>看<strong>看日志</strong>咯，没有报错日志。</li><li><strong>抓包</strong>看预支付接口（改版了的）返回的数据，没有问题</li><li>然后前端同事电脑<strong>直接访问他本地电脑</strong>的前端资源，接口用线上的，发现竟然可以……那就说明后端接口没问题了（<strong>排除法</strong>）！好了，说明问题出现在前端</li></ul><p>因为我们的支付链接pay.xxx.com用nginx转发到cdn加速的static3.xxx.com，<strong>怀疑是不是缓存问题</strong>，好吧，<strong>加版本号试试</strong>（?v=20190105），还是不行?我再加（?v=1247384683xx00），各种加还是不行。</p><p>这样弄了许久之后，我就<strong>怀疑是不是前端资源没发呢</strong>？然后叫前端同事再重新上传到gitlab，我再拉代码，然后帮他打包（<strong>RazSchool文件目录</strong>）上传到服务器。重发了之后还是不行？我靠了个DJ！！！这时候就懵逼了，到底前端问题出现在哪里？缓存还是没刷新成功？？？</p><blockquote><p>（这时候到了晚上，工作了一天，基本脑子有点模糊，不够用了！！！）</p></blockquote><p>我<strong>自以为是地认为就是缓存没刷新的问题</strong>，然后叫大佬（只有大佬才有操作服务器和发版的权限）改下nginx，把pay.xxx.com转发到源站static.xxx.com去，然后大佬一通操作（改nginx转发，重启nginx）后，再试试还是不行，抓包发现还是转发到static3.xxx.com的cdn加速链接？（why？？？这个有待大佬研究）</p><p>在大佬操作过程中，我在旁边看着他噼里啪啦，一不小心在看到nginx转发的链接中有<code>rmall</code>这个单词，这时我脑海中突然响起了一首歌曲—<strong>是他  是他  就是他</strong>……好像我每次打包的文件都是RazSchoo目录的，而支付商城的前端资源好像是放在rmall目录下的，嘶~md，神经大条了！！！不会就是<strong>我发错资源了</strong>吧，然后我小心翼翼地对大家说：我好像忘发了，发错文件了。。。</p><p>最后打包<strong>rmall</strong>，嗯，看到这个文件夹怎么感觉这么陌生呢？？？重新上传之后，<strong>果然可以了</strong>！！！虽然访问过的链接还是不行，因为链接还是static3有缓存，加下版本号就行了。</p><p><strong>为了避免缓存问题</strong>，我叫大佬<strong>把支付链接的首页直接转发到源站static去</strong>，然后再改下微信公众号菜单里的链接（加版本号），好了，perfect（你个鬼），可以下班了。（这时候已经是11点多了）。马丹，这么sb的问题，竟然弄了两个小时，耽误了大家这么多的时间，本屌感觉有点心虚，看来少不了请大家喝茶压压惊了！</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li><strong>晚上最好不要发版</strong>，要发也要等待状态良好的时候再发（脑子清醒的时候，我觉得自己早上状态挺不错的）。一是晚上状态不好很容易出问题，二是下班之后出了问题更麻烦。</li><li>如果发版的时候发的是别人的东西，一定要让他先过目，<strong>最好让他在旁边看着你操作</strong>，这样就知道你发的东西到底是不是他想要发的。</li><li>这种问题，<strong>细心一点</strong>应该可以避免，比如拉取文件的时候看清楚是哪些文件要发的，询问清楚再发</li><li><strong>出了问题不要急，先静下心来，一步步排除问题</strong>，总会找到答案的，只是时间问题。</li></ul><hr><blockquote><p>更多精彩文章请关注</p><ul><li><a href="https://xianhuali.gitee.io/">个人博客：EdwardDrew</a></li><li><a href="https://www.jianshu.com/u/a233ef56efa2" target="_blank" rel="noopener">简书</a></li><li><a href="https://me.csdn.net/EdwardDrew" target="_blank" rel="noopener">CSDN</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;昨天晚上9点多的时候发版小程序（前端RazSchool目录）和商城（rmall目录），&lt;strong&gt;前端资源&lt;/strong&gt;和后端代码都
      
    
    </summary>
    
      <category term="随笔" scheme="https://xianhuali.gitee.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="https://xianhuali.gitee.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>记参加2018广州GDG嘉年华的感想</title>
    <link href="https://xianhuali.gitee.io/2018/12/30/%E8%AE%B0%E5%8F%82%E5%8A%A02018%E5%B9%BF%E5%B7%9EGDG%E5%98%89%E5%B9%B4%E5%8D%8E%E7%9A%84%E6%84%9F%E6%83%B3/"/>
    <id>https://xianhuali.gitee.io/2018/12/30/记参加2018广州GDG嘉年华的感想/</id>
    <published>2018-12-30T14:04:10.000Z</published>
    <updated>2018-12-30T14:09:49.030Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>2018年12月23日在珠江琶醍举行Google DevFest 2018广州国际嘉年华。<br>大学去过一次GDG，那时去过感觉还不错，有一些东西还是能听懂的。但这次真的听不懂了，是我太无知了吗？</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>早上8点半做公交过去，9点多到了，以为自己已经很早了。但是一看排队的人，吓老子一跳，什么时候这么火了？难道是我朋友圈转发吸引来的？（嗯，有点自作多情了）。看下图<br><img src="https://upload-images.jianshu.io/upload_images/15182918-e139b0ea3f500258.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="微信图片_20181230211910.jpg"></p><p>然后正场很大，感觉这次排场很大呀，像开演唱会似的，搞得花里胡哨的，不过我喜欢。。。如下<br><img src="https://upload-images.jianshu.io/upload_images/15182918-0ef1f56860dca60d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="微信图片_20181230212143.jpg"></p><p>活动开始后，感觉自己像听天书了，没有任何感觉，虽然我听不懂但我感觉很牛逼的样子，额……放上一张长长的会议流程图，看看里面说了啥？<br><img src="https://upload-images.jianshu.io/upload_images/15182918-5ac69eb46c6cd4f4.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="微信图片_20181230212855.jpg"></p><p>这里不得不说下，为了谷歌文化衫，我厚着脸皮发了朋友圈集赞了50个，但是轮到我的时候竟然发完了，我当时心里就有一万头神兽奔腾而过……<del>我裤子都脱了，你竟然说没了</del>（咳咳，过滤掉这句话）。不过看在这次活动还办得不错，爸爸就原谅你了。最后放上这次的收获<br><img src="https://upload-images.jianshu.io/upload_images/15182918-fa00ef23746e4ad9.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="微信图片_20181230213025.jpg"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li>完全听不懂，咋办？-就当开开眼界吧</li></ul><hr><p>如有侵权，请联系作者尽快删除。</p><blockquote><p>更多精彩文章请关注</p><ul><li><a href="https://xianhuali.gitee.io/">个人博客：EdwardDrew</a></li><li><a href="https://www.jianshu.com/u/a233ef56efa2" target="_blank" rel="noopener">简书</a></li><li><a href="https://me.csdn.net/EdwardDrew" target="_blank" rel="noopener">CSDN</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;2018年12月23日在珠江琶醍举行Google DevFest 2018广州国际嘉年华。&lt;br&gt;大学去过一次GDG，那时去过感觉还不错，有
      
    
    </summary>
    
      <category term="随笔" scheme="https://xianhuali.gitee.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="https://xianhuali.gitee.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>真小白|一步步教你用Python抓取微信好友分析</title>
    <link href="https://xianhuali.gitee.io/2018/12/22/%E7%9C%9F%E5%B0%8F%E7%99%BD-%E4%B8%80%E6%AD%A5%E6%AD%A5%E6%95%99%E4%BD%A0%E7%94%A8Python%E6%8A%93%E5%8F%96%E5%BE%AE%E4%BF%A1%E5%A5%BD%E5%8F%8B%E5%88%86%E6%9E%90/"/>
    <id>https://xianhuali.gitee.io/2018/12/22/真小白-一步步教你用Python抓取微信好友分析/</id>
    <published>2018-12-22T06:16:10.000Z</published>
    <updated>2018-12-22T06:17:19.998Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>前段时间公司里有个同事发了张图片在群上，是他所有微信好友头像拼成的一张大图，我看着挺有意思，就想自己也搞一下，然后百度了下怎么抓取微信好友之类的……一搜全是用Python抓取的，之前就听说过Python爬虫，但是没怎么接触过Python，算是小白（<strong>真小白</strong>）。不过我不慌，好歹自己是计算机专业（而且现在做的是Java开发），语言的原理应该是想通的，所以就大概看了下Python的介绍和基础语法，然后又自己捣鼓了下用Python写个helloWord，嗯，感觉很简单呀！但是要我自己一步步去弄？不存在的</p><p>搜了很多篇文章怎么抓取微信好友分析之类的，感觉没有一点Python基础还真地看不懂，自己又是一个嫌麻烦的人，最终Google了一篇比较适合小白用户操作的文章，下面会讲到。但是对于真小白（完全不懂Python的人来说还是有点难的），因为对于我们这种门外汉来说，我只是想操作软件那样简单操作几下就能得到我想要的结果而已，我不想浪费时间去了解什么Python什么安装环境什么原理，巴拉巴拉……所以就有了这篇博客，废话少说，下面进入正题</p><blockquote><p>注：本篇博客不讲原理（因为我也不懂，哈哈），只讲实现过程，原理请移步下方的<a href="#参考">参考</a></p></blockquote><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p>欲练神功，必……看效果<br>1：统计好友的性别<br><img src="https://upload-images.jianshu.io/upload_images/15182918-5fd6c32fd092f090.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Python结果数据分析-性别统计.png"><br>看起来男女比例差不多啊</p><p>2：统计好友的地域分布，并且可视化在地图上展示<br><img src="https://upload-images.jianshu.io/upload_images/15182918-f9fd9a17c736c725.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Python结果数据分析-地区分析.png"><br>广东人最多，我系广东人</p><p>3：将好友的昵称做成词云</p><blockquote><p>因为这个信息比较私人，这里就不展示。跟下面好友签名的词云分析显示效果差不多，用的一样技术</p></blockquote><p>4：统计好友个性签名中的高频词汇<br><img src="https://upload-images.jianshu.io/upload_images/15182918-63410eb93a5dc80d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Python结果数据分析-签名词云.png"><br>中间最大的几个英文，class、span、emoji应该是一些特殊字符或表情显示不出来。出现比较多的词，比如努力、生活、自己、人生，出现次数越多字越大</p><p>5：将所有好友的头像合并成一张大图</p><blockquote><p>本人没有获取好友的同意，头像算隐私了吧？所以打了马赛克（谁还没有一点小秘密呢？）</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/15182918-75e3d1dd56b624a8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Python结果数据分析-图片合成.png"><br>啊，我的眼睛……</p><h2 id="安装Python环境"><a href="#安装Python环境" class="headerlink" title="安装Python环境"></a>安装Python环境</h2><p>1、打开Python官网，下载最新版Python3.7.1安装，如下图。</p><blockquote><p><strong>懒得去官网的点这里</strong><a href="https://www.python.org/ftp/python/3.7.1/python-3.7.1.exe" target="_blank" rel="noopener">直接下载链接</a></p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/15182918-63e59d5b1112b443.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Python安装1.png"><br>2、 下载完之后双击python-3.7.1.exe，勾选<code>Add python.exe to Path</code>（是把Python的安装路径添加到系统环境变量的Path变量中，<strong>很重要</strong>。大神可忽略，小白必选），点击Install Now（默认安装到C盘，可以自己选择安装目录，由于我的C盘是固体250G，所以就默认安装），如下图<br><img src="https://upload-images.jianshu.io/upload_images/15182918-380f760cf0eb091f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Python安装2.png"><br>3、安装完之后检查下，点击开始，输入cmd（或者win+R快捷键）打开命令行窗口，输入python，出现下图就说明安装成功。此时输入exit()可以离开python编译器。<br><img src="https://upload-images.jianshu.io/upload_images/15182918-cc4cd7b3d4f7ab5e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Python安装3.png"></p><h1 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h1><p>在cmd窗口下运行</p><ul><li>pip3 install pillow</li></ul><p>然后就开始安装，等到安装完成之后才可再次输入命令（耐心等，这一过程不要乱动，小白双手可离开键盘），如下图<br><img src="https://upload-images.jianshu.io/upload_images/15182918-5d90c07cb930d12a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Python安装相关插件.png"></p><p>类似的依次运行下面命令</p><ul><li>pip3 install pyecharts</li><li>pip3 install itchat</li><li>pip3 install jieba</li><li>pip3 install echarts-china-provinces-pypkg</li><li>pip3 install echarts-countries-pypkg</li></ul><h2 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h2><p>懂github的</p><ul><li><a href="https://github.com/EdwardDrew/wechat_friends" target="_blank" rel="noopener">github</a> </li></ul><p>真小白</p><ul><li><a href="https://pan.baidu.com/s/1Sa2WCV5jemTTPSx54PBjqA" target="_blank" rel="noopener">百度云</a></li></ul><p>下载之后放到一个地方，然后解压，如下图<br><img src="https://upload-images.jianshu.io/upload_images/15182918-f80d1dc25a750c9e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Python安装源码.png"></p><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>准备好所有东西之后就可以正式开始抓取微信好友信息了</p><h3 id="获取用户信息"><a href="#获取用户信息" class="headerlink" title="获取用户信息"></a>获取用户信息</h3><p>1、需要将get_user_info.py第70行的二胖，改成自己的名字（这里我改成自己的微信昵称：鲜花）。</p><blockquote><p>用什么软件打开修改？我用的是notepad++（百度下载就行），或者直接用文本text软件notepad.exe打开也行，不过格式不好看</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/15182918-071ae86ac7c4924d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Python运行源码1.png"></p><p>2、定位到源码根目录下，<code>cd /d F:\Projects\python\wechat_friends-master（替换成你自己的）</code>或者在源码根目录下按住Shift+鼠标右键，选择在此处打开命令窗口，如下图<br><img src="https://upload-images.jianshu.io/upload_images/15182918-9e414321b51e55c4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Python运行源码2.png"></p><p>3、输入<code>python get_user_info.py</code>，（如果安装了多个python环境的输入<code>python3 get_user_info.py</code>）， 执行后会弹出微信网页版登录的二维码，用手机微信扫一扫并且同意登录即可（如果图片没弹出来，在源码根目录下找到QR.png，手动点击打开），如下图：<br><img src="https://upload-images.jianshu.io/upload_images/15182918-21202cf08656e152.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Python运行2.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/15182918-a4b52de185c1ae6c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Python运行源码3.png"></p><p>命令执行后，等待，出现下图说明已登录成功并获取到了好友的信息<br><img src="https://upload-images.jianshu.io/upload_images/15182918-f66217efd1b1a0b3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Python运行源码4.png"></p><p>python get_user_info.py执行后</p><ul><li>会在data目录下生成friends.json （存放抓取到的好友信息，比如昵称、头像链接、个性签名等）</li><li>会在images目录下存放所有好友的头像<br>如下图<br><img src="https://upload-images.jianshu.io/upload_images/15182918-4b6ee281406fd8a8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Python运行结果文件-好友信息.png"><br><img src="https://upload-images.jianshu.io/upload_images/15182918-81f3da99450c1294.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Python运行结果文件-图片.png"></li></ul><p>到此，我们的好友数据拿到了，下面就是对数据进行可视化分析</p><h2 id="数据可视化分析"><a href="#数据可视化分析" class="headerlink" title="数据可视化分析"></a>数据可视化分析</h2><p>在cmd命令窗口中按住Win+C键结束命令，输入<code>python analyse.py</code>，（如果安装了多个python环境的输入<code>python3 analyse.py</code>），数据处理过程需要点时间（等待吧），如下图<br><img src="https://upload-images.jianshu.io/upload_images/15182918-adcbe8b1ab8c35e8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Python运行源码5.png"><br>当出现如下图时说明处理完成了<br><img src="https://upload-images.jianshu.io/upload_images/15182918-69ded71a4be89b2d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Python运行源码6.png"></p><p>python analyse.py 执行后会在analyse文件夹下生产合成后的图片以及可视化的文件，如下图<br><img src="https://upload-images.jianshu.io/upload_images/15182918-fe185a6170b96cc7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Python运行结果文件-数据分析.png"></p><p>至此，大功告成，去看看我们自己的好友分析吧，点开html文件即可用浏览器访问</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>周六早上捣鼓了下这个微信好友分析，顺便写了一篇博客，感想如下</p><ul><li>完事开头难，你去做了其实也就那样</li><li>写详细的博客真心累（小白笑了，大神呵呵）</li><li>感谢二胖（本篇微信好友分析源码的原作者，想详细了解的移步下方的<a href="#参考">参考</a>）</li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://zhuanlan.zhihu.com/p/37621427" target="_blank" rel="noopener">分享一段代码-微信好友分析</a></p><hr><blockquote><p>更多精彩文章请关注</p><ul><li><a href="https://xianhuali.gitee.io/">个人博客：EdwardDrew</a></li><li><a href="https://www.jianshu.com/u/a233ef56efa2" target="_blank" rel="noopener">简书</a></li><li><a href="https://me.csdn.net/EdwardDrew" target="_blank" rel="noopener">CSDN</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;前段时间公司里有个同事发了张图片在群上，是他所有微信好友头像拼成的一张大图，我看着挺有意思，就想自己也搞一下，然后百度了下怎么抓取微信好友之
      
    
    </summary>
    
      <category term="python" scheme="https://xianhuali.gitee.io/categories/python/"/>
    
    
      <category term="python" scheme="https://xianhuali.gitee.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>《 希望你认准自己的路，努力生活》推文思考</title>
    <link href="https://xianhuali.gitee.io/2018/12/16/%E3%80%8A-%E5%B8%8C%E6%9C%9B%E4%BD%A0%E8%AE%A4%E5%87%86%E8%87%AA%E5%B7%B1%E7%9A%84%E8%B7%AF%EF%BC%8C%E5%8A%AA%E5%8A%9B%E7%94%9F%E6%B4%BB%E3%80%8B%E6%8E%A8%E6%96%87%E6%80%9D%E8%80%83/"/>
    <id>https://xianhuali.gitee.io/2018/12/16/《-希望你认准自己的路，努力生活》推文思考/</id>
    <published>2018-12-16T05:48:43.000Z</published>
    <updated>2018-12-22T07:05:12.228Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://upload-images.jianshu.io/upload_images/15182918-544125d7b88cd07e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Work harder! Keep on!"></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>今天看到一篇微信推文，感觉很有道理，就摘取了其中的一些重点句子出来，方便自己后续查看。</p><blockquote><p>若涉及版权问题,请及时联系作者删除。</p></blockquote><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><ul><li><p>人生可走的路太多了，每个人的选择都有吸引力，但每个人的选择也都有取舍。如果只盯着别人拥有的，质问自己没有的，那日子永远都不会快乐。</p></li><li><p>你看，我们好像都忽略了自己拥有的，然后拼命羡慕别人拥有的，却没有看到别人没能说出口和无人理解的心酸。</p></li><li><p>每个人都有适合自己的路要走，都有相比之下更在意的东西，都在为自己想要的做出取舍，付出努力。鱼和熊掌不可兼得，你想要远方就不要羡慕别人的一蔬一饭，你想要自由就要拿更多禁锢去换。</p></li><li><p>二十岁刚出头的年级，请把自己摆在二十岁出头的位置上。你没有理由也没有能力去拥有一个四十岁的人拥有的阅历和财富，你除了手头的青春你一无所有，但就是你手头上这位数不多的东西，能决定你是一个怎么样的人。</p></li><li><p>希望你看清生活的真相之后能找到属于自己的路，不要盲目羡慕也不要轻易追逐，浮于水面的体面都是别人选择让你看到的，羡慕之前先想下一藏在水下的努力和心酸。</p></li><li><p>认准自己想走的路，心无旁骛地去走就对了，做好自己远比模仿别人有价值。</p></li><li><p>人生要自己选择，由此产生的责任也全部自己承担，这才叫活着</p></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>回首前二十年，我自己何尝不是呢？小时候跟别人比玩具，读书时跟别人比成绩、比努力，长大了跟别人比成就、比工作、比金钱、比帅气……事事跟别人比较，什么都要跟别人比，那其实都是想做别人，不是做自己啊。不过还是要努力啊！</p><hr><blockquote><p>更多精彩文章请关注</p><ul><li><a href="https://xianhuali.gitee.io/">个人博客：EdwardDrew</a></li><li><a href="https://www.jianshu.com/u/a233ef56efa2" target="_blank" rel="noopener">简书</a></li><li><a href="https://me.csdn.net/EdwardDrew" target="_blank" rel="noopener">CSDN</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/15182918-544125d7b88cd07e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240
      
    
    </summary>
    
      <category term="随笔" scheme="https://xianhuali.gitee.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="https://xianhuali.gitee.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>网易Java高级工程师交流②微信群问题收集</title>
    <link href="https://xianhuali.gitee.io/2018/12/02/%E7%BD%91%E6%98%93Java%E9%AB%98%E7%BA%A7%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BA%A4%E6%B5%81%E2%91%A1%E5%BE%AE%E4%BF%A1%E7%BE%A4%E9%97%AE%E9%A2%98%E6%94%B6%E9%9B%86/"/>
    <id>https://xianhuali.gitee.io/2018/12/02/网易Java高级工程师交流②微信群问题收集/</id>
    <published>2018-12-02T07:43:15.000Z</published>
    <updated>2018-12-22T07:04:44.492Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这个是网易Java高级工程师交流②微信群的问题收集，写这篇博客主要是为了方便自己记忆和总结。若涉及版权问题,请及时联系作者删除。</p><h1 id="2018-11-09"><a href="#2018-11-09" class="headerlink" title="2018-11-09"></a>2018-11-09</h1><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><p>redis 官方推荐用 redisson实现分布式锁</p><h2 id="A-1"><a href="#A-1" class="headerlink" title="A"></a>A</h2><p>我们的项目就是我们的真实案例，是脱敏之后的</p><h1 id="2018-11-10"><a href="#2018-11-10" class="headerlink" title="2018-11-10"></a>2018-11-10</h1><h2 id="Q"><a href="#Q" class="headerlink" title="Q"></a>Q</h2><p>分线程执行的顺序按有序执行的么</p><h3 id="A-2"><a href="#A-2" class="headerlink" title="A"></a>A</h3><ul><li>代码中，start方法的调用顺序，不代表线程的执行顺序，</li></ul><h2 id="Q-1"><a href="#Q-1" class="headerlink" title="Q"></a>Q</h2><p>课上的例子，把锁加在OrderCodeGenerator是不是就不用分布式锁了？<br><img src="https://upload-images.jianshu.io/upload_images/15182918-584cc23d4b7cd7cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><h3 id="A-3"><a href="#A-3" class="headerlink" title="A"></a>A</h3><ul><li>ordercode订单号生成的系统服务  这个，单台机器扛不住压力，肯定是集群的。所以，你这把锁 加了也没用。</li><li>那么集群的OrderCodeGenerator又是如何产生全局自增id的，Server间如何同步的。分布式id是不是做不到sequential，只能做到uuid</li><li>ID生成策略，有集群下保证唯一的方式。<br>昨晚的例子，主要是讲分布式锁。</li></ul><h2 id="Q-2"><a href="#Q-2" class="headerlink" title="Q"></a>Q</h2><p>秒杀都是先到先得吗</p><h3 id="A-4"><a href="#A-4" class="headerlink" title="A"></a>A</h3><ul><li><p> 不是先到先得，是系统处理到谁就是谁</p></li><li><p>[ ] 前面在课堂上，说给大家分享我的<strong>nginx最精简配置文件</strong>。需要的扣1。</p></li></ul><h2 id="Q-3"><a href="#Q-3" class="headerlink" title="Q"></a>Q</h2><p>Java核心技术这本书好，还是偏程思想</p><h3 id="A-5"><a href="#A-5" class="headerlink" title="A"></a>A</h3><ul><li>先啃Java编程思想或者核心技术的前几章的基础，会比较好，不然一步一报错，更难受。<br>而且你去面试，他们都是问你为什么，而不是怎么用，然后当你知道为什么，你也能将知识串联起来，记得更牢</li></ul><h2 id="Q-4"><a href="#Q-4" class="headerlink" title="Q"></a>Q</h2><p>面试造飞机，工作拧螺丝</p><h3 id="A-6"><a href="#A-6" class="headerlink" title="A"></a>A</h3><ul><li>拧螺丝你也要知道规格和扭矩，别拧坏了。而且，让你进来，也是想你可以以后造飞船的，但不是进来进让你握住公司核心。</li><li>基础不牢的人，写的代码，简单的代码也是很好玩的。。</li></ul><h2 id="Q-5"><a href="#Q-5" class="headerlink" title="Q"></a>Q</h2><p>请问一下群里有没有做过配置文件加密的呢</p><h3 id="A-7"><a href="#A-7" class="headerlink" title="A"></a>A</h3><ul><li>搜索Config.hcl ？</li></ul><h2 id="Q-6"><a href="#Q-6" class="headerlink" title="Q"></a>Q</h2><p>java反射重要么？工作中重要么</p><h3 id="A-8"><a href="#A-8" class="headerlink" title="A"></a>A</h3><ul><li>重要</li><li>很多框架里面都依赖java的反射机制的阿</li></ul><h2 id="Q-7"><a href="#Q-7" class="headerlink" title="Q"></a>Q</h2><p>是不是工作的时候mapper之类的文件都是生成的不用自己写</p><h3 id="A-9"><a href="#A-9" class="headerlink" title="A"></a>A</h3><ul><li>都是代码生成器</li><li>你们用rundeck嘛</li><li>大佬自己搞 我们改改用的</li></ul><h2 id="Q-8"><a href="#Q-8" class="headerlink" title="Q"></a>Q</h2><p>30多岁好找工作吗</p><h3 id="A-10"><a href="#A-10" class="headerlink" title="A"></a>A</h3><ul><li>压力好大好大。我现在的困境是，大公司做不上领导，小公司不想去</li><li>你想想，哪个行业不喜欢年轻力壮的。但是人就这么多，总归还是能干活就行。@Java0年julian 大公司，没机会，就努力积攒自己的能力。一有机会，逮住不放手。厚积薄发</li><li>@Java0年julian   人为什么感到焦虑,因为对未来感到迷茫 . 根本原因是没有计划</li><li>还有就是，信心不够</li></ul><h2 id="Q-9"><a href="#Q-9" class="headerlink" title="Q"></a>Q</h2><p>今晚了解了异步的分布式技术，那如果要求同步的，该怎么处理呢</p><h2 id="Q-10"><a href="#Q-10" class="headerlink" title="Q"></a>Q</h2><p>这么贵是面授吗？</p><h3 id="A-11"><a href="#A-11" class="headerlink" title="A"></a>A</h3><ul><li>面授，你的三万起了</li><li>如果是不付出就有收获程序员不都得两万起步的工资。学习是投资。</li><li>通过深入学习，如果进入互联网大厂，一个月的薪水涨幅应该就会超过这个学费。</li></ul><h1 id="2018-11-17"><a href="#2018-11-17" class="headerlink" title="2018-11-17"></a>2018-11-17</h1><h2 id="A-12"><a href="#A-12" class="headerlink" title="A"></a>A</h2><p>人在世上，如果仅仅是为了自己孤零零的活着，那应该是可以潇洒<br>但如果想留下点什么，简直是要命。。</p><h2 id="Q-11"><a href="#Q-11" class="headerlink" title="Q"></a>Q</h2><p>我很想问下啊，大家经常用redis来做个缓存，减少数据库的压力。那么redis怎么跟数据库之间的数据同步啊，常用的一个场景就是，我们查询数据库之前先去查redis，如果redis有就直接返回了，那怎么保证redis的数据跟数据库的一致而不至于返回了一个过时的数据呢</p><h3 id="A-13"><a href="#A-13" class="headerlink" title="A"></a>A</h3><ul><li>最终一致性了解一下</li><li><a href="https://coolshell.cn/articles/17416.html" target="_blank" rel="noopener">关于缓存的问题看到一偏好文章</a></li></ul><h2 id="Q-12"><a href="#Q-12" class="headerlink" title="Q"></a>Q</h2><p>问下各位大佬  你们公司MQ用的是哪一个?<br>ActiveMQ or RabbitMQ </p><h3 id="A-14"><a href="#A-14" class="headerlink" title="A"></a>A</h3><ul><li>ActiveMQ</li></ul><h1 id="2018-11-19"><a href="#2018-11-19" class="headerlink" title="2018-11-19"></a>2018-11-19</h1><h2 id="A-15"><a href="#A-15" class="headerlink" title="A"></a>A</h2><ul><li>使用JWT存在个问题，就是单用户可以多端多个token同时访问</li><li>需求是只一端能登录，所以token还是要存起来</li><li>在自己的系统里做好设置和判断就可以了，需求多开就允许多开，需求不允许就把老的token踢掉</li></ul><h1 id="2018-11-21"><a href="#2018-11-21" class="headerlink" title="2018-11-21"></a>2018-11-21</h1><h2 id="Q-13"><a href="#Q-13" class="headerlink" title="Q"></a>Q</h2><p>遇到薅羊毛的该怎么做</p><h3 id="A-16"><a href="#A-16" class="headerlink" title="A"></a>A</h3><ul><li>遇到薅羊毛的该怎么做</li></ul><h1 id="2018-11-22"><a href="#2018-11-22" class="headerlink" title="2018-11-22"></a>2018-11-22</h1><h2 id="Q-14"><a href="#Q-14" class="headerlink" title="Q"></a>Q</h2><p>java.security.NoSuchAlgorithmException: Cannot find any provider supporting AES/CBC/PKCS7Padding。各位大佬   我在本地测试 解密微信userinfo时 是成功的 , 但是一到测试服就报这个错误 </p><h3 id="A-17"><a href="#A-17" class="headerlink" title="A"></a>A</h3><ul><li>这是java出口安全机制的问题 最长128位  你换成256即可</li><li>我是在做微信支付退款的时候 解析微信的密文出现这个情况的。@BEnny  修改jdk 的配置就好了</li><li><a href="https://mp.weixin.qq.com/s/AwTjfUMVzZafknpTS9b59Q" target="_blank" rel="noopener">微信接口开发_退款结果通知API Java语言描述</a>。@BEnny 这个博客里面有解决办法 和 jar包的下载地址  你先玩吧 </li><li>大兄弟  这个造成的原因一样的, 由于美国出口限制  jdk的长度需要我们自己设置</li></ul><h1 id="2018-11-24"><a href="#2018-11-24" class="headerlink" title="2018-11-24"></a>2018-11-24</h1><h2 id="Q-15"><a href="#Q-15" class="headerlink" title="Q"></a>Q</h2><p>mysql优化除了索引还有什么。。</p><h3 id="A-18"><a href="#A-18" class="headerlink" title="A"></a>A</h3><ul><li>sql语句本身的优化吧</li><li>本质还是为了索引。避免全局扫描</li><li>那天好像老师说了分库分表吧，这也算吧。更深层次的，那就去改mysql的源码去了</li><li>这些不算了。很好奇面试问mysql优化怎么回答</li><li>硬件，软件，设计。这个思路回答，还有一些配置，其次才是sql优化</li><li>还要看具体什么场景，架构，业务等等</li></ul><h1 id="2018-11-28"><a href="#2018-11-28" class="headerlink" title="2018-11-28"></a>2018-11-28</h1><h2 id="Q-16"><a href="#Q-16" class="headerlink" title="Q"></a>Q</h2><p>请教个问题，有用mysql的小伙伴吗，如果一张表的物理主键很长，会影响到索引吗？<br>一般索引文件中会记录物理主键，记的应该是物理主键的引用地址吧，不是物理主键的值吧</p><h3 id="A-19"><a href="#A-19" class="headerlink" title="A"></a>A</h3><ul><li>你是说这个主键的值很长么。我记得建主键的一个原则就是字段要短吧，不能把大文本这样的建成主键</li><li>mysql对索引字段长度有限制的，700多个字符还是多少吧</li><li>不同版本索引长度限制不一样</li><li>之前一直以为mysql中索引文件是独立的文件，里面如果存物理主键的话，那物理主键的长度肯定会影响到索引文件的大小，但后来看到数据和索引在同一个文件里，那索引里的物理主键就不应该再存一份物理主键的值吧，只要存引用地址就可以了，这样是不是物理主键的长度大小对索引就没什么影响了</li><li>@南京-10-阿泰 对你那个问题，索引有2种，聚集索引是放在一个文件里面的，非聚集索引是分开放的。但是如果我们将一个长字段设置成索引的话，索引是方便查到这个位置，但是查到位置以后，要进行比较吧，长字段比较就慢了，所以我的理解是长字段不适合做索引</li><li>楼上你说的长字段是索引字段，还是物理主见字段</li><li>主键不是也会自动变成索引么？</li><li>恩，如果是用主键的值去比较是会受到长度的影响，但主要存的是主键地址，不就不用比较了吗</li></ul><h1 id="2018-11-29"><a href="#2018-11-29" class="headerlink" title="2018-11-29"></a>2018-11-29</h1><h2 id="A-20"><a href="#A-20" class="headerlink" title="A"></a>A</h2><p>1.T4是什么，以及怎样的人能当腾讯T4？<br>腾讯的员工职业发展过程当中，有两条通道可以选一条L线就是Leader，组长、总监、总经理。还有一条线，就是专业线T（技术族）、P（产品族）、M（市场族）。<br>我个人看法，专业2级的核心关键词是胜任，3级的关键词是方法、4级的关键词是影响。5级和6级的关键词是啥我还真不知知道，但他们基本上都是技术VP或者是首席科学家般的存在，听老大说鹅厂曾经有过一位T6 孙国政，他是OCR（图片识别技术）的发明人。</p><p>T4的技术专家一方面在自己的技术领域有着开创性的贡献，另一方面大多主导过公司级的重点技术项目，再者为公司培养了一批T3或者以上的技术骨干。 </p><p>作者：贺嘉<br>链接：<a href="https://www.zhihu.com/question/29910703/answer/134468046" target="_blank" rel="noopener">https://www.zhihu.com/question/29910703/answer/134468046</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><h1 id="未完待续……"><a href="#未完待续……" class="headerlink" title="未完待续……"></a>未完待续……</h1><hr><blockquote><p>更多精彩文章请关注</p><ul><li><a href="https://xianhuali.gitee.io/">个人博客：EdwardDrew</a></li><li><a href="https://www.jianshu.com/u/a233ef56efa2" target="_blank" rel="noopener">简书</a></li><li><a href="https://me.csdn.net/EdwardDrew" target="_blank" rel="noopener">CSDN</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;这个是网易Java高级工程师交流②微信群的问题收集，写这篇博客主要是为了方便自己记忆和总结。若涉及版权问题,请及时联系作者删除。&lt;/p&gt;
&lt;
      
    
    </summary>
    
      <category term="Java高级开发工程师直播公开课" scheme="https://xianhuali.gitee.io/categories/Java%E9%AB%98%E7%BA%A7%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9B%B4%E6%92%AD%E5%85%AC%E5%BC%80%E8%AF%BE/"/>
    
    
      <category term="问题" scheme="https://xianhuali.gitee.io/tags/%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>设计模式之策略模式</title>
    <link href="https://xianhuali.gitee.io/2018/11/29/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/"/>
    <id>https://xianhuali.gitee.io/2018/11/29/设计模式之策略模式/</id>
    <published>2018-11-29T14:57:25.000Z</published>
    <updated>2018-12-22T07:05:34.931Z</updated>
    
    <content type="html"><![CDATA[<h1 id="设计模式之策略模式"><a href="#设计模式之策略模式" class="headerlink" title="设计模式之策略模式"></a>设计模式之策略模式</h1><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这个是极客学院的<a href="https://www.jikexueyuan.com/course/474.html" target="_blank" rel="noopener"> 设计模式之策略模式</a>，写这篇博客主要是为了方便自己记忆和总结。</p><blockquote><p>若涉及版权问题,请及时联系作者删除。</p></blockquote><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>课程概要</p><ul><li>设计模式入门</li><li>策略模式原理</li><li>策略模式示例演示</li><li>策略模式的注意点</li></ul><h2 id="设计模式入门"><a href="#设计模式入门" class="headerlink" title="设计模式入门"></a>设计模式入门</h2><blockquote><p>本课从总体上介绍设计模式的概念、用处和意义，并通过举例 Java IO 流的设计方式引入对模式的思考。</p></blockquote><p>1、设计模式是人们在面对同类型软件工程设计问题所总结出的一些有用经验。模式不是代码，而是<strong>某类问题的通用设计解决方案</strong></p><p>2、设计模式的本质目的是使软件工程在维护性、扩展性、变化性、复杂度方面成O(N)</p><p>3、OO（Object Oriented,面向对象）是原则，设计模式是具体方法、工具</p><p>举例：BufferedReader的设计</p><h2 id="策略模式原理"><a href="#策略模式原理" class="headerlink" title="策略模式原理"></a>策略模式原理</h2><blockquote><p>本课从一个假想的模拟鸭子游戏项目的设计出发，通过遇到问题到思考解决方法，最后引出策略模式来解决问题。</p></blockquote><p>继承的问题：对类的局部改动，尤其超类的局部改动，会影响其他部分。影响会有溢出效应</p><blockquote><p>所谓溢出效应(Spillover Effect)，是指一个组织在进行某项活动时，不仅会产生活动所预期的效果，而且会对组织之外的人或社会产生的影响</p></blockquote><p>超类挖的一个坑，每个子类都要来填，增加工作量，复杂度O(N^2)。不是好的设计模式</p><h3 id="用策略模式来解决新需求"><a href="#用策略模式来解决新需求" class="headerlink" title="用策略模式来解决新需求"></a>用策略模式来解决新需求</h3><p>需要新的设计方式，应对项目的扩展性，降低复杂度：</p><ul><li>1）分析项目变化与不变部分，抽取变化部分，抽象成接口+实现；</li><li>2）鸭子哪些功能是会根据新需求变化的？叫声、飞行…</li></ul><p>1、接口：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1）</span><br><span class="line">public interface FlyBehavior &#123;</span><br><span class="line">    void fly();</span><br><span class="line">&#125;</span><br><span class="line">2）</span><br><span class="line">publicinterface QuackBehavior &#123;</span><br><span class="line">void quack();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>3）好处：新增行为简单，行为类更好的复用，组合更方便。既有继承带来的复用好处，没有挖坑。</p><h3 id="重新设计模拟鸭子项目"><a href="#重新设计模拟鸭子项目" class="headerlink" title="重新设计模拟鸭子项目"></a>重新设计模拟鸭子项目</h3><p>1、重新设计的鸭子项目：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">public abstract class Duck &#123;</span><br><span class="line"></span><br><span class="line">FlyBehavior mFlyBehavior;</span><br><span class="line">QuackBehavior mQuackBehavior;</span><br><span class="line"></span><br><span class="line">public Duck() &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void Fly() &#123;</span><br><span class="line">mFlyBehavior.fly();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void Quack() &#123;</span><br><span class="line">mQuackBehavior.quack();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public abstract void display();</span><br><span class="line"></span><br><span class="line">public void SetQuackBehavoir(QuackBehavior qb) &#123;</span><br><span class="line">mQuackBehavior = qb;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void SetFlyBehavoir(FlyBehavior fb) &#123;</span><br><span class="line">mFlyBehavior = fb;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void swim() &#123;</span><br><span class="line">System.out.println(&quot;~~im swim~~&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="总结策略模式定义"><a href="#总结策略模式定义" class="headerlink" title="总结策略模式定义"></a>总结策略模式定义</h3><p>1、绿头鸭、石头鸭：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">public class GreenHeadDuck extends Duck &#123;</span><br><span class="line"></span><br><span class="line">public GreenHeadDuck() &#123;</span><br><span class="line">mFlyBehavior = new GoodFlyBehavior();</span><br><span class="line">mQuackBehavior = new GaGaQuackBehavior();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void display() &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line">System.out.println(&quot;**GreenHead**&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>2、<strong>策略模式：分别封装行为接口，实现算法族，超类里放行为接口对象，在子类里具体设定行为对象。原则就是：分离变化部分，封装接口，基于接口编程各种功能。此模式让行为算法的变化独立于算法的使用者。</strong></p><h2 id="策略模式示例演示"><a href="#策略模式示例演示" class="headerlink" title="策略模式示例演示"></a>策略模式示例演示</h2><blockquote><p>本课详细讲解以策略模式设计的模拟鸭子游戏类设计、接口设计等细节，并运行程序查看效果。</p></blockquote><h2 id="策略模式的注意点"><a href="#策略模式的注意点" class="headerlink" title="策略模式的注意点"></a>策略模式的注意点</h2><blockquote><p>本课总结上述涉及的几个关键点和注意点，再次梳理一下策略模式的思路。</p></blockquote><p>1、分析项目中变化部分与不变部分<br>2、多用组合少用继承；用行为类组合，而不是行为的继承。更有弹性<br>3、设计模式有没有相应的库直接使用？有些库或框架本身就用某种设计模式设计的<br>4、如果找不到适用的模式怎么办？对项目分析不够透彻或者项目奇怪只能用面向对象、基本原则、抽象、分析、设计超类、继承、子类来做了</p><h1 id="源码下载"><a href="#源码下载" class="headerlink" title="源码下载"></a>源码下载</h1><p>(￣︶￣)↗[<a href="https://github.com/EdwardDrew" target="_blank" rel="noopener">相关示例完整代码</a>]</p><hr><blockquote><p>更多精彩文章请关注</p><ul><li><a href="https://xianhuali.gitee.io/">个人博客：EdwardDrew</a></li><li><a href="https://www.jianshu.com/u/a233ef56efa2" target="_blank" rel="noopener">简书</a></li><li><a href="https://me.csdn.net/EdwardDrew" target="_blank" rel="noopener">CSDN</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;设计模式之策略模式&quot;&gt;&lt;a href=&quot;#设计模式之策略模式&quot; class=&quot;headerlink&quot; title=&quot;设计模式之策略模式&quot;&gt;&lt;/a&gt;设计模式之策略模式&lt;/h1&gt;&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
      <category term="设计模式" scheme="https://xianhuali.gitee.io/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="设计模式" scheme="https://xianhuali.gitee.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>《Java高级开发工程师》直播课-I系列-课时5：【实战篇】Spring框架源码中的设计模式</title>
    <link href="https://xianhuali.gitee.io/2018/11/28/%E3%80%90%E5%AE%9E%E6%88%98%E7%AF%87%E3%80%91Spring%E6%A1%86%E6%9E%B6%E6%BA%90%E7%A0%81%E4%B8%AD%E7%9A%84%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    <id>https://xianhuali.gitee.io/2018/11/28/【实战篇】Spring框架源码中的设计模式/</id>
    <published>2018-11-28T04:54:22.000Z</published>
    <updated>2018-12-22T07:05:21.119Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这个是网易云课堂的<a href="https://study.163.com/course/courseMain.htm?courseId=1006355036" target="_blank" rel="noopener">《Java高级开发工程师》直播课I系列中的【实战篇】Spring框架源码中的设计模式</a>，写这篇博客主要是为了方便自己记忆和总结。</p><blockquote><p>若涉及版权问题,请及时联系作者删除。</p></blockquote><hr><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h1 id="Spring框架源码中的设计模式"><a href="#Spring框架源码中的设计模式" class="headerlink" title="Spring框架源码中的设计模式"></a>Spring框架源码中的设计模式</h1><blockquote><p>让你的代码更优雅</p></blockquote><h2 id="课程安排"><a href="#课程安排" class="headerlink" title="课程安排"></a>课程安排</h2><p><strong>1、引子</strong> ：代码重构时，那些代码中的坏味道</p><p><strong>2、代码重构技巧</strong> ：如何将设计模式运用在代码编写的过程中</p><p><strong>3、Spring设计模式</strong> ：结合Spring框架，讲解设计模式在顶级框架中的运用</p><p><strong>4、设计模式结合</strong> ：融合业务场景，学会设计模式的组合</p><h2 id="01-引子"><a href="#01-引子" class="headerlink" title="01 引子"></a>01 引子</h2><h3 id="书籍：《重构：改善既有代码的设计》"><a href="#书籍：《重构：改善既有代码的设计》" class="headerlink" title="书籍：《重构：改善既有代码的设计》"></a>书籍：<em>《重构：改善既有代码的设计》</em></h3><p>22种代码中的坏味道：……</p><blockquote><p><strong>注</strong>：外国书籍，翻译后的会有偏差，建议结合代码示意及英文表达综合理解</p></blockquote><h3 id="设计模式的学习前言"><a href="#设计模式的学习前言" class="headerlink" title="设计模式的学习前言"></a>设计模式的学习前言</h3><p>设计模式，是前人根据自己的经验总结出来，代表了代码设计中的最佳实践</p><ul><li><strong>学习方式</strong>：<ul><li>丰富编码经验</li><li>学习优秀开源框架的使用</li></ul></li></ul><hr><h2 id="02-利用设计模式设计你的代码"><a href="#02-利用设计模式设计你的代码" class="headerlink" title="02 利用设计模式设计你的代码"></a>02 利用设计模式设计你的代码</h2><p>有这么一个业务需求：用户-&gt;下订单-&gt;短信通知-&gt;微信通知<br><img src="https://upload-images.jianshu.io/upload_images/15182918-42d20f31a75c0650.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1.png"></p><h3 id="六大设计原则"><a href="#六大设计原则" class="headerlink" title="六大设计原则"></a>六大设计原则</h3><ul><li><strong>单一职责原则（Single Responsiblity Principle SRP）</strong>：一个类只负责一个功能领域中的相应职责。高内聚、低耦合</li><li><strong>开闭原则（Open Closed Principle，OCP）</strong>：对扩展开放，对修改关闭。不修改原有的代码情况下进行扩展。</li><li><strong>里氏代换原则（Liskov Substitution Principle，LSP）</strong>：所有引用基类（父类）的地方必须能透明地使用其子类的对象。</li><li><strong>依赖倒转原则（Dependency Inversion Principle，DIP）</strong>：抽象不应当依赖于细节，细节应当依赖于抽象。</li><li><strong>接口隔离原则（Interface Segregation Principle，ISP）</strong>：接口拆分。当一个接口太大时，我们需要将它分割成一些更细小的接口。</li><li><strong>迪米特法则（Principle of Least Knowledge，PLK）</strong>：减少依赖。一个软件实体应当尽可能少地与其他实体发生相互作用。<blockquote><p>利用设计原则，作为衡量代码好坏的尺子。再选择合适的设计模式对代码进行设计</p></blockquote></li></ul><h3 id="学习Spring框架的做法"><a href="#学习Spring框架的做法" class="headerlink" title="学习Spring框架的做法"></a>学习Spring框架的做法</h3><p><img src="https://upload-images.jianshu.io/upload_images/15182918-efb3c80140e50a11.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2.png"></p><h3 id="观察者模式"><a href="#观察者模式" class="headerlink" title="观察者模式"></a>观察者模式</h3><p><strong>观察者模式</strong>：定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并自动更新。</p><ul><li>又称：发布/订阅、消息通知机制、事件监听、事件驱动编程</li></ul><p>利用观察者模式设计高拓展性的代码，利用Spring事件机制改造订单功能。<br><img src="https://upload-images.jianshu.io/upload_images/15182918-cef9dac34f7bddfb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="3.png"></p><hr><h2 id="03看Spring框架源码中的设计模式"><a href="#03看Spring框架源码中的设计模式" class="headerlink" title="03看Spring框架源码中的设计模式"></a>03看Spring框架源码中的设计模式</h2><h3 id="模板方法模式"><a href="#模板方法模式" class="headerlink" title="模板方法模式"></a>模板方法模式</h3><p>定义<strong>一个算法</strong>的骨架，将骨架中的<strong>特定步骤延迟到子类</strong>中（注：特定步骤由子类实现）。</p><ul><li>算法：代码运行的逻辑、顺序</li><li>骨架：没有完全实现，还没完成</li></ul><p>模板方法模式使得子类不改变算法的结构即可重新定义该算法的某些特定步骤。</p><p>==实战学习技巧==：优秀开源框架，根据命名规则去分析用到的设计模式</p><h3 id="策略模式"><a href="#策略模式" class="headerlink" title="策略模式"></a>策略模式</h3><p>描述：策略模式定义了<strong>一系列的算法</strong>，并将每一个算法<strong>封装</strong>起来，而且使他们<strong>可以互相替换</strong>，让算法独立于使用它的客户而独立变化。</p><ul><li>算法：程序运行的逻辑、顺序</li><li>封装：函数/方法、类、接口、抽象类</li><li>相互替换：<ul><li>1)代表每一种算法，功能定义是一样的，具体实现不同。（同样是吃：人吃熟食、狼吃生肉）</li><li>2)JAVA中，可以直接替换的是接口实现、子类。类图大致如下：<br><img src="https://upload-images.jianshu.io/upload_images/15182918-fcb178958b78e231.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="4.png"></li></ul></li></ul><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p> <strong>设计模式应用的两个步骤：</strong></p><ul><li>1、 根据设计原则衡量代码好坏。</li><li>2、选择合适的设计模式，对代码进行设计。</li></ul><p><strong>设计模式学习几点建议：</strong></p><ul><li>1、代码设计时，参考开源框架中类似的实现。</li><li>2、根据框架内部源码的实现，匹配到对应的设计模式。</li><li>3、利用拆分关键字的方式，学会分析设计模式的定义。</li><li>4、多写代码、多看源码、多想。</li></ul><p><strong>不为“模式”而用设计模式，你在不知不觉中就会用到。</strong></p><h1 id="源码下载"><a href="#源码下载" class="headerlink" title="源码下载"></a>源码下载</h1><p>(￣︶￣)↗[<a href="https://github.com/EdwardDrew" target="_blank" rel="noopener">相关示例完整代码</a>]</p><hr><blockquote><p>更多精彩文章请关注</p><ul><li><a href="https://xianhuali.gitee.io/">个人博客：EdwardDrew</a></li><li><a href="https://www.jianshu.com/u/a233ef56efa2" target="_blank" rel="noopener">简书</a></li><li><a href="https://me.csdn.net/EdwardDrew" target="_blank" rel="noopener">CSDN</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;这个是网易云课堂的&lt;a href=&quot;https://study.163.com/course/courseMain.htm?courseId
      
    
    </summary>
    
      <category term="Java高级开发工程师直播公开课" scheme="https://xianhuali.gitee.io/categories/Java%E9%AB%98%E7%BA%A7%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9B%B4%E6%92%AD%E5%85%AC%E5%BC%80%E8%AF%BE/"/>
    
    
      <category term="Spring" scheme="https://xianhuali.gitee.io/tags/Spring/"/>
    
      <category term="设计模式" scheme="https://xianhuali.gitee.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
</feed>
